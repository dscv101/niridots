#!/usr/bin/env bash
# Fedora 42 — Muted Retro Space desktop bootstrap
# Removes KDE/Hyprland, installs Niri (COPR), SDDM, portals, and applies unified theme.
#
# This script was generated for the Muted Retro Space desktop environment.  It bundles
# installation logic to remove any existing KDE/Hyprland desktop, enable the
# yalter/niri COPR repository, install the Niri compositor, supporting Wayland
# utilities, SDDM, portals, and theme dependencies.  It also installs
# user-level themes (GTK, icons, cursors), copies Waybar/mako/wofi/Niri
# configuration files when supplied alongside this script, applies the Muted
# Retro Space wallpaper via swww, and cleans up unused packages.  See the
# accompanying README for more details on optional bundled assets.

set -euo pipefail

## ---------------- Config ----------------
THEME_DIR="${PWD}"

# Theme artifacts (these should be placed alongside this script or adjust paths)
SDDM_THEME_ZIP="${THEME_DIR}/SDDM-Theme-MutedRetroSpace-Minimal.zip"   # or SDDM-Theme-MutedRetroSpace.zip
GTK_THEME_ZIP="${THEME_DIR}/MutedRetroSpace-theme.zip"
ICON_BASE_ZIP="${THEME_DIR}/Papirus-MutedRetroSpace.zip"
ICON_APPS_ZIP="${THEME_DIR}/Papirus-MutedRetroSpace-Apps.zip"
CURSOR_ZIP="${THEME_DIR}/MutedRetroSpace-Cursor.zip"

# Optional: Niri config file.  Place your generated config.kdl here.
NIRI_CONFIG="${THEME_DIR}/config.kdl"

# Waybar / mako / wofi configuration files.  If these files are present in the
# same directory as this script they will be copied into ~/.config.
WAYBAR_CFG="${THEME_DIR}/config.jsonc"
WAYBAR_CSS="${THEME_DIR}/style.css"
MAKO_CFG="${THEME_DIR}/mako_config"
WOFI_CFG="${THEME_DIR}/wofi_config"
WOFI_CSS="${THEME_DIR}/wofi_style.css"

# Wallpaper.  The installer will copy this to
# ~/Pictures/wallpapers/muted-space-1920x1080.png.  Replace with your own file
# as desired.
WALLPAPER_SRC="${THEME_DIR}/muted-space-1920x1080.png"
WALLPAPER_DEST="${HOME}/Pictures/wallpapers/muted-space-1920x1080.png"

## ---------------- Helpers ----------------
need() { command -v "$1" >/dev/null 2>&1; }
as_root() { if [[ $EUID -ne 0 ]]; then sudo "$@"; else "$@"; fi; }
msg() { echo -e "\e[1;32m==>\e[0m $*"; }
warn() { echo -e "\e[1;33m[!]\e[0m $*"; }
die() { echo -e "\e[1;31m[✖]\e[0m $*"; exit 1; }
copy_if_exists() {
  # copy_if_exists SRC DST
  if [[ -f "$1" ]]; then cp -f "$1" "$2"; return 0; fi
  return 1
}

## ---------------- Sanity ----------------
need dnf || die "This script is for Fedora (dnf not found)."

# Ensure unzip is installed for extracting theme archives
if ! need unzip; then
  as_root dnf -y install unzip >/dev/null
fi

## ---------------- Remove KDE/Hyprland ----------------
msg "Removing KDE Plasma & Hyprland (if present)…"
as_root dnf -y group remove kde-desktop-environment || true
as_root dnf -y remove \
  "plasma-*" "kde-*" "kf5-*" "kf6-*" \
  "qt5-qtquickcontrols*" "qt6-qtquickcontrols*" \
  sddm-breath* hyprland "hyprland-*" xdg-desktop-portal-hyprland || true
as_root dnf -y autoremove || true

## ---------------- Enable COPR for Niri ----------------
msg "Enabling COPR repo for niri (yalter/niri)…"
as_root dnf -y install dnf-plugins-core
as_root dnf -y copr enable yalter/niri

## ---------------- Install core stack ----------------
msg "Installing Niri, Wayland utils, SDDM and deps…"
as_root dnf -y install \
  niri waybar mako wofi swww wl-clipboard sway-clipman \
  grim slurp wlogout foot nemo pavucontrol \
  xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-wlr \
  papirus-icon-theme bibata-cursor-themes \
  xcursorgen \
  inter-fonts jetbrains-mono-fonts \
  sddm qt5-qtquickcontrols qt5-qtgraphicaleffects qt5-qtdeclarative \
  qt6-qtbase qt6-qtdeclarative qt6-qtquickcontrols2 \
  unzip curl git gvfs gvfs-mtp gvfs-gphoto2

# Optional: attempt to install Ghostty if available
as_root dnf -y install ghostty || true
# Note: If you wish to use grimblast binds in your Niri config, install hyprland-contrib as well.
# as_root dnf -y install hyprland-contrib || true

## ---------------- Display manager ----------------
msg "Setting SDDM as display manager…"
as_root systemctl disable gdm.service --now 2>/dev/null || true
as_root systemctl enable sddm.service --now

## ---------------- Create config dirs ----------------
mkdir -p "$HOME/.config/waybar" "$HOME/.config/mako" "$HOME/.config/wofi" "$HOME/.config/niri"
mkdir -p "$HOME/.themes" "$HOME/.icons" "$HOME/.local/share/icons" "$HOME/Pictures/wallpapers"

## ---------------- Install GTK theme ----------------
if [[ -f "$GTK_THEME_ZIP" ]]; then
  msg "Installing GTK theme…"
  tmpdir="$(mktemp -d)"
  unzip -q "$GTK_THEME_ZIP" -d "$tmpdir"
  cp -r "$tmpdir/MutedRetroSpace" "$HOME/.themes/"
  rm -rf "$tmpdir"
else
  warn "GTK theme ZIP not found: $GTK_THEME_ZIP"
fi

## ---------------- Install Icon themes ----------------
if [[ -f "$ICON_BASE_ZIP" ]]; then
  msg "Installing Papirus base overrides…"
  tmpbase="$(mktemp -d)"
  unzip -q "$ICON_BASE_ZIP" -d "$tmpbase"
  cp -r "$tmpbase/Papirus-MutedRetroSpace" "$HOME/.icons/"
  rm -rf "$tmpbase"
else
  warn "Icon base ZIP not found: $ICON_BASE_ZIP"
fi

if [[ -f "$ICON_APPS_ZIP" ]]; then
  msg "Installing Papirus app glyph overrides…"
  tmpapps="$(mktemp -d)"
  unzip -q "$ICON_APPS_ZIP" -d "$tmpapps"
  cp -r "$tmpapps/Papirus-MutedRetroSpace-Apps" "$HOME/.icons/"
  rm -rf "$tmpapps"
else
  warn "Icon apps ZIP not found: $ICON_APPS_ZIP"
fi

## ---------------- Install Cursor theme ----------------
if [[ -f "$CURSOR_ZIP" ]]; then
  msg "Installing cursor theme…"
  tmpc="$(mktemp -d)"
  unzip -q "$CURSOR_ZIP" -d "$tmpc"
  if [[ -x "$tmpc/MutedRetroSpace-Cursor/build.sh" ]]; then
    pushd "$tmpc/MutedRetroSpace-Cursor" >/dev/null
      need xcursorgen || as_root dnf -y install xcursorgen
      ./build.sh
    popd >/dev/null
  fi
  mkdir -p "$HOME/.icons/MutedRetroSpace-Cursor"
  cp -r "$tmpc/MutedRetroSpace-Cursor/cursors" "$HOME/.icons/MutedRetroSpace-Cursor/" 2>/dev/null || true
  cp -r "$tmpc/MutedRetroSpace-Cursor/index.theme" "$HOME/.icons/MutedRetroSpace-Cursor/" 2>/dev/null || true
  rm -rf "$tmpc"
else
  warn "Cursor ZIP not found: $CURSOR_ZIP"
fi

## ---------------- Copy configs ----------------
copy_if_exists "$WAYBAR_CFG" "$HOME/.config/waybar/config.jsonc" || warn "Waybar config missing ($WAYBAR_CFG)"
copy_if_exists "$WAYBAR_CSS" "$HOME/.config/waybar/style.css" || warn "Waybar CSS missing ($WAYBAR_CSS)"

# mako configuration: fallback to a generic 'config' in the script directory
if ! copy_if_exists "$MAKO_CFG" "$HOME/.config/mako/config"; then
  copy_if_exists "${THEME_DIR}/config" "$HOME/.config/mako/config" || true
fi

# wofi configuration: fallback to generic names
if ! copy_if_exists "$WOFI_CFG" "$HOME/.config/wofi/config"; then
  copy_if_exists "${THEME_DIR}/config" "$HOME/.config/wofi/config" || true
fi
if ! copy_if_exists "$WOFI_CSS" "$HOME/.config/wofi/style.css"; then
  copy_if_exists "${THEME_DIR}/style.css" "$HOME/.config/wofi/style.css" || true
fi

# Niri config (optional).  Copy this into ~/.config/niri/config.kdl if provided.
if [[ -f "$NIRI_CONFIG" ]]; then
  cp -f "$NIRI_CONFIG" "$HOME/.config/niri/config.kdl"
fi

## ---------------- Install SDDM theme ----------------
if [[ -f "$SDDM_THEME_ZIP" ]]; then
  msg "Installing SDDM theme…"
  tmp_sddm="$(mktemp -d)"
  unzip -q "$SDDM_THEME_ZIP" -d "$tmp_sddm"
  THEME_DIR_IN_ZIP="$(find "$tmp_sddm" -maxdepth 1 -mindepth 1 -type d | head -n1)"
  THEME_NAME="$(basename "$THEME_DIR_IN_ZIP")"
  as_root mkdir -p "/usr/share/sddm/themes/$THEME_NAME"
  as_root cp -r "$THEME_DIR_IN_ZIP/"* "/usr/share/sddm/themes/$THEME_NAME/"
  as_root mkdir -p /etc/sddm.conf.d
  printf "[Theme]\nCurrent=%s\n" "$THEME_NAME" | as_root tee /etc/sddm.conf.d/theme.conf >/dev/null
  printf "[Theme]\nCursorTheme=MutedRetroSpace-Cursor\n" | as_root tee /etc/sddm.conf.d/cursor.conf >/dev/null
  rm -rf "$tmp_sddm"
else
  warn "SDDM theme ZIP not found: $SDDM_THEME_ZIP"
fi

## ---------------- Apply interface settings ----------------
# These gsettings calls configure GNOME interface themes.  They will
# fail silently on systems without GNOME, which is acceptable.
gsettings set org.gnome.desktop.interface gtk-theme 'MutedRetroSpace'               || true
gsettings set org.gnome.desktop.interface icon-theme 'Papirus-MutedRetroSpace-Apps' || true
gsettings set org.gnome.desktop.interface cursor-theme 'MutedRetroSpace-Cursor'     || true
gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'                || true

## ---------------- Copy wallpaper ----------------
if [[ -f "$WALLPAPER_SRC" ]]; then
  msg "Installing wallpaper…"
  mkdir -p "$(dirname "$WALLPAPER_DEST")"
  cp -f "$WALLPAPER_SRC" "$WALLPAPER_DEST"
fi

## ---------------- Prime wallpaper via swww ----------------
if [[ -f "$WALLPAPER_DEST" ]]; then
  msg "Priming swww with your wallpaper…"
  pkill swww-daemon 2>/dev/null || true
  swww init || true
  swww img "$WALLPAPER_DEST" \
    --transition-type wave --transition-angle 45 \
    --transition-step 90 --transition-fps 60 --transition-duration 2 || true
else
  warn "Wallpaper not found: $WALLPAPER_DEST"
fi

## ---------------- Final cleanup ----------------
msg "Final autoremove…"
as_root dnf -y autoremove || true

msg "✅ All done.  Reboot to SDDM + Niri with the Muted Retro Space theme."
echo "Tip: If 'grimblast' binds are in your Niri config, install 'hyprland-contrib' or switch binds to 'grim + slurp'."
