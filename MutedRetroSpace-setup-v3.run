#!/usr/bin/env bash
# Fedora (41/42+) — Muted Retro Space desktop bootstrap
# Detects dnf5 vs dnf, installs the appropriate COPR plugin, enables the
# `yalter/niri` repository and applies the full Muted Retro Space desktop
# theme.  This script is idempotent and will skip steps when packages
# are already installed.  When run on Fedora 42 (which uses dnf5 by
# default) the script installs the `dnf5-plugins` package so that the
# COPR commands are available.

set -euo pipefail

## ------------- Package manager detection -------------
# Determine whether the system uses dnf5 (Fedora 42+) or the classic dnf.
# Based on the result we define helper functions that wrap the
# appropriate commands.  These helpers are used throughout the script so
# that the remainder of the code does not need to be version-aware.

if command -v dnf5 >/dev/null 2>&1; then
  # Fedora 42+ (dnf5)
  COPR_ENABLE() {
    # Install the copr plugin and enable the niri repository
    sudo dnf5 -y install dnf5-plugins
    sudo dnf5 -y copr enable yalter/niri
  }
  PKG_INSTALL() { sudo dnf5 -y install "$@"; }
  PKG_REMOVE()  { sudo dnf5 -y remove "$@"; }
  AUTOREMOVE()  { sudo dnf5 -y autoremove || true; }
else
  # Fedora 41 and earlier (dnf)
  COPR_ENABLE() {
    sudo dnf -y install dnf-plugins-core
    sudo dnf -y copr enable yalter/niri
  }
  PKG_INSTALL() { sudo dnf -y install "$@"; }
  PKG_REMOVE()  { sudo dnf -y remove "$@"; }
  AUTOREMOVE()  { sudo dnf -y autoremove || true; }
fi

# Helper functions for logging and simple checks
msg()  { echo -e "\e[1;32m==>\e[0m $*"; }
warn() { echo -e "\e[1;33m[!]\e[0m $*"; }
die()  { echo -e "\e[1;31m[✖]\e[0m $*"; exit 1; }
need() { command -v "$1" >/dev/null 2>&1; }
copy_if_exists() {
  # Copy $1 to $2 if the first file exists
  [[ -f "$1" ]] && cp -f "$1" "$2"
}

## ------------- Bundle paths -------------
# The script expects to be run from within a directory containing the
# theme bundles and configuration files.  Adjust THEME_DIR if you
# relocate this script relative to those resources.

THEME_DIR="${PWD}"

# Theme ZIP archives (should live in THEME_DIR)
SDDM_THEME_ZIP="${THEME_DIR}/SDDM-Theme-MutedRetroSpace-Minimal.zip"
GTK_THEME_ZIP="${THEME_DIR}/MutedRetroSpace-theme.zip"
ICON_BASE_ZIP="${THEME_DIR}/Papirus-MutedRetroSpace.zip"
ICON_APPS_ZIP="${THEME_DIR}/Papirus-MutedRetroSpace-Apps.zip"
CURSOR_ZIP="${THEME_DIR}/MutedRetroSpace-Cursor.zip"

# Configuration files
WAYBAR_CFG="${THEME_DIR}/config.jsonc"
WAYBAR_CSS="${THEME_DIR}/style.css"
MAKO_CFG="${THEME_DIR}/mako_config"
WOFI_CFG="${THEME_DIR}/wofi_config"
WOFI_CSS="${THEME_DIR}/wofi_style.css"
NIRI_CONFIG="${THEME_DIR}/config.kdl"

# Wallpaper handling: if a wallpaper is bundled alongside this script it
# will be installed to the user's Pictures directory.  Otherwise the
# script looks for a wallpapers subdirectory.
BUNDLED_WALL="${THEME_DIR}/muted-space-1920x1080.png"
if [[ -f "${THEME_DIR}/wallpapers/muted-space-1920x1080.png" ]]; then
  BUNDLED_WALL="${THEME_DIR}/wallpapers/muted-space-1920x1080.png"
fi
WALLPAPER="${HOME}/Pictures/wallpapers/muted-space-1920x1080.png"

## ------------- Sanity -------------
# Ensure essential tools are available.  If unzip is missing we try to
# install it before proceeding.

need unzip || PKG_INSTALL unzip

## ------------- Remove Hyprland (optional) -------------
# We avoid removing KDE packages in order to preserve system integrity
# (dnf5 protects them), but remove Hyprland and its portal if present.
msg "Removing Hyprland if present…"
PKG_REMOVE hyprland "hyprland-*" xdg-desktop-portal-hyprland || true
AUTOREMOVE

## ------------- Enable COPR for Niri -------------
msg "Enabling COPR repo for niri (yalter/niri)…"
COPR_ENABLE

## ------------- Install core stack -------------
msg "Installing Niri, Wayland utilities, SDDM and dependencies…"
# Use --skip-unavailable to avoid errors on optional packages that may
# not exist on a particular Fedora release.
PKG_INSTALL --skip-unavailable \
  niri waybar mako wofi swww wl-clipboard cliphist \
  grim slurp wlogout foot nemo pavucontrol \
  xdg-desktop-portal xdg-desktop-portal-gtk xdg-desktop-portal-wlr \
  papirus-icon-theme \
  xcursorgen \
  google-inter-fonts jetbrains-mono-fonts \
  sddm qt5-qtquickcontrols qt5-qtgraphicaleffects qt5-qtdeclarative \
  qt6-qtbase qt6-qtdeclarative qt6-qtquickcontrols2 \
  curl git gvfs gvfs-mtp gvfs-gphoto2

# Install Ghostty if available but don't fail if it isn't
PKG_INSTALL ghostty || true

## ------------- Configure display manager -------------
msg "Setting SDDM as display manager…"
sudo systemctl disable gdm.service --now 2>/dev/null || true
sudo systemctl enable sddm.service --now

## ------------- Create user configuration directories -------------
mkdir -p "$HOME/.config/waybar" "$HOME/.config/mako" "$HOME/.config/wofi" "$HOME/.config/niri"
mkdir -p "$HOME/.themes" "$HOME/.icons" "$HOME/.local/share/icons" "$HOME/.local/share/fonts"
mkdir -p "$(dirname "$WALLPAPER")"

## ------------- Install GTK theme -------------
if [[ -f "$GTK_THEME_ZIP" ]]; then
  msg "Installing GTK theme…"
  tmpdir="$(mktemp -d)"
  unzip -q "$GTK_THEME_ZIP" -d "$tmpdir"
  cp -r "$tmpdir/MutedRetroSpace" "$HOME/.themes/"
  rm -rf "$tmpdir"
else
  warn "GTK theme ZIP not found: $GTK_THEME_ZIP"
fi

## ------------- Install icon overrides -------------
if [[ -f "$ICON_BASE_ZIP" ]]; then
  msg "Installing Papirus base overrides…"
  tmpbase="$(mktemp -d)"
  unzip -q "$ICON_BASE_ZIP" -d "$tmpbase"
  cp -r "$tmpbase/Papirus-MutedRetroSpace" "$HOME/.icons/"
  rm -rf "$tmpbase"
else
  warn "Icon base ZIP not found: $ICON_BASE_ZIP"
fi

if [[ -f "$ICON_APPS_ZIP" ]]; then
  msg "Installing Papirus app glyph overrides…"
  tmpapps="$(mktemp -d)"
  unzip -q "$ICON_APPS_ZIP" -d "$tmpapps"
  cp -r "$tmpapps/Papirus-MutedRetroSpace-Apps" "$HOME/.icons/"
  rm -rf "$tmpapps"
else
  warn "Icon apps ZIP not found: $ICON_APPS_ZIP"
fi

## ------------- Install cursor theme -------------
if [[ -f "$CURSOR_ZIP" ]]; then
  msg "Installing cursor theme…"
  tmpc="$(mktemp -d)"
  unzip -q "$CURSOR_ZIP" -d "$tmpc"
  if [[ -x "$tmpc/MutedRetroSpace-Cursor/build.sh" ]]; then
    pushd "$tmpc/MutedRetroSpace-Cursor" >/dev/null
      need xcursorgen || PKG_INSTALL xcursorgen
      ./build.sh
    popd >/dev/null
  fi
  mkdir -p "$HOME/.icons/MutedRetroSpace-Cursor"
  cp -r "$tmpc/MutedRetroSpace-Cursor/cursors" "$HOME/.icons/MutedRetroSpace-Cursor/" 2>/dev/null || true
  cp -r "$tmpc/MutedRetroSpace-Cursor/index.theme" "$HOME/.icons/MutedRetroSpace-Cursor/" 2>/dev/null || true
  rm -rf "$tmpc"
else
  warn "Cursor ZIP not found: $CURSOR_ZIP"
fi

## ------------- Copy configuration files -------------
copy_if_exists "$WAYBAR_CFG" "$HOME/.config/waybar/config.jsonc" || warn "Waybar config missing ($WAYBAR_CFG)"
copy_if_exists "$WAYBAR_CSS" "$HOME/.config/waybar/style.css"    || warn "Waybar CSS missing ($WAYBAR_CSS)"
copy_if_exists "$MAKO_CFG"   "$HOME/.config/mako/config"         || true
copy_if_exists "$WOFI_CFG"   "$HOME/.config/wofi/config"         || true
copy_if_exists "$WOFI_CSS"   "$HOME/.config/wofi/style.css"      || true
copy_if_exists "$NIRI_CONFIG" "$HOME/.config/niri/config.kdl"     || true

## ------------- Install SDDM theme -------------
if [[ -f "$SDDM_THEME_ZIP" ]]; then
  msg "Installing SDDM theme…"
  tmp_sddm="$(mktemp -d)"
  unzip -q "$SDDM_THEME_ZIP" -d "$tmp_sddm"
  THEME_DIR_IN_ZIP="$(find "$tmp_sddm" -maxdepth 1 -mindepth 1 -type d | head -n1)"
  THEME_NAME="$(basename "$THEME_DIR_IN_ZIP")"
  sudo mkdir -p "/usr/share/sddm/themes/$THEME_NAME"
  sudo cp -r "$THEME_DIR_IN_ZIP/"* "/usr/share/sddm/themes/$THEME_NAME/"
  sudo mkdir -p /etc/sddm.conf.d
  printf "[Theme]\nCurrent=%s\n" "$THEME_NAME" | sudo tee /etc/sddm.conf.d/theme.conf >/dev/null
  printf "[Theme]\nCursorTheme=MutedRetroSpace-Cursor\n" | sudo tee /etc/sddm.conf.d/cursor.conf >/dev/null
  rm -rf "$tmp_sddm"
else
  warn "SDDM theme ZIP not found: $SDDM_THEME_ZIP"
fi

## ------------- Apply interface settings -------------
# Apply GTK theme, icon theme, cursor, and dark colour scheme.  These
# commands are ignored on systems without a running gsettings daemon.
gsettings set org.gnome.desktop.interface gtk-theme 'MutedRetroSpace'               || true
gsettings set org.gnome.desktop.interface icon-theme 'Papirus-MutedRetroSpace-Apps' || true
gsettings set org.gnome.desktop.interface cursor-theme 'MutedRetroSpace-Cursor'     || true
gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'                || true

## ------------- Install bundled fonts (optional) -------------
# If there are any .ttf or .otf files in THEME_DIR or THEME_DIR/fonts,
# copy them to the user's font directory and rebuild the font cache.
if compgen -G "${THEME_DIR}/*.[ot]tf" >/dev/null || compgen -G "${THEME_DIR}/fonts/*.[ot]tf" >/dev/null; then
  msg "Installing bundled fonts…"
  shopt -s nullglob
  for f in "${THEME_DIR}"/*.[ot]tf "${THEME_DIR}/fonts"/*.[ot]tf; do
    [[ -f "$f" ]] && cp -f "$f" "$HOME/.local/share/fonts/"
  done
  fc-cache -f "$HOME/.local/share/fonts" || true
fi

## ------------- Wallpaper setup via swww -------------
if [[ -f "$BUNDLED_WALL" ]]; then
  msg "Installing bundled wallpaper…"
  cp -f "$BUNDLED_WALL" "$WALLPAPER"
fi

if [[ -f "$WALLPAPER" ]]; then
  msg "Priming swww with your wallpaper…"
  pkill swww-daemon 2>/dev/null || true
  swww init || true
  swww img "$WALLPAPER" \
    --transition-type wave --transition-angle 45 \
    --transition-step 90 --transition-fps 60 --transition-duration 2 || true
else
  warn "Wallpaper not found: $WALLPAPER"
fi

## ------------- Cleanup -------------
AUTOREMOVE
msg "✅ All done. Reboot to SDDM + Niri with the Muted Retro Space theme."
